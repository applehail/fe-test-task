"use strict";var Ee=Object.create;var P=Object.defineProperty;var z=Object.getOwnPropertyDescriptor;var we=Object.getOwnPropertyNames;var Te=Object.getPrototypeOf,Ne=Object.prototype.hasOwnProperty;var Se=(r,e)=>{for(var o in e)P(r,o,{get:e[o],enumerable:!0})},j=(r,e,o,t)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of we(e))!Ne.call(r,s)&&s!==o&&P(r,s,{get:()=>e[s],enumerable:!(t=z(e,s))||t.enumerable});return r};var g=(r,e,o)=>(o=r!=null?Ee(Te(r)):{},j(e||!r||!r.__esModule?P(o,"default",{value:r,enumerable:!0}):o,r)),Ue=r=>j(P({},"__esModule",{value:!0}),r),u=(r,e,o,t)=>{for(var s=t>1?void 0:t?z(e,o):e,p=r.length-1,L;p>=0;p--)(L=r[p])&&(s=(t?L(e,o,s):L(s))||s);return t&&s&&P(e,o,s),s};var Ie={};Se(Ie,{configRouter:()=>B});module.exports=Ue(Ie);var ye=g(require("express"));var k=require("http-status-codes");var v=require("zod"),n=class{constructor(e,o){this.data=e,this.statusCode=o}};var qe=v.z.object({items:v.z.array(v.z.number())}).required();var R=(r,e)=>e.status(r.statusCode).send(r.data),S=r=>(e,o,t)=>{try{let s={...e.body,...e.query,...e.params};console.log("validateRequest:",s),r.parse(s),t()}catch(s){console.log("err:",s);let p=[];s.errors.map(F=>{let he=F.message+": "+F.path.join(",");p.push(he)});let L=p.join(", "),H=k.StatusCodes.BAD_REQUEST;o.status(H).send(new n(L,H))}};var M=require("http-status-codes");var V=g(require("jssha")),T=r=>{let e=new V.default("SHA-256","TEXT",{encoding:"UTF8"});return e.update(r),e.getHash("HEX")};var K=async(r,e,o)=>{let t;return o?(t=await r.findOneBy({[o]:e[o]}).catch(s=>console.log("find by on",s)),t?r.merge(t,e):t=r.create(e)):t=r.create(e),await r.save(t)},$=async(r,e)=>{let o=r.create(e);return await r.insert(o)};var Q=require("typeorm");var U=require("typeorm");var l=require("typeorm");var a=class{};u([(0,l.Column)("integer",{primary:!0,name:"id",generated:!0})],a.prototype,"id",2),u([(0,l.Column)("boolean",{name:"is_active",default:!0})],a.prototype,"is_active",2),u([(0,l.Column)("text",{name:"name",nullable:!1})],a.prototype,"name",2),u([(0,l.Column)("text",{name:"login",nullable:!1})],a.prototype,"login",2),u([(0,l.Column)("text",{name:"password",nullable:!1})],a.prototype,"password",2),u([(0,l.Column)("text",{name:"email",nullable:!0})],a.prototype,"email",2),u([(0,l.Column)("text",{name:"phone",nullable:!0})],a.prototype,"phone",2),u([(0,l.JoinColumn)({name:"role_id",referencedColumnName:"id"}),(0,l.ManyToOne)(()=>d,e=>e.users)],a.prototype,"role",2),a=u([(0,l.Entity)("user")],a);var d=class{};u([(0,U.Column)("integer",{primary:!0,name:"id"})],d.prototype,"id",2),u([(0,U.Column)("text",{name:"name"})],d.prototype,"name",2),u([(0,U.OneToMany)(()=>a,e=>e.role)],d.prototype,"users",2),d=u([(0,U.Entity)("role")],d);var b=class{constructor(){this.name="Initial1723140820802"}async up(e){await e.query('CREATE TABLE "user" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "is_active" boolean NOT NULL DEFAULT (1), "name" text NOT NULL, "login" text NOT NULL, "password" text NOT NULL, "email" text, "phone" text, "role_id" integer)'),await e.query('CREATE TABLE "role" ("id" integer PRIMARY KEY NOT NULL, "name" text NOT NULL)'),await e.query('CREATE TABLE "temporary_user" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "is_active" boolean NOT NULL DEFAULT (1), "name" text NOT NULL, "login" text NOT NULL, "password" text NOT NULL, "email" text, "phone" text, "role_id" integer, CONSTRAINT "FK_fb2e442d14add3cefbdf33c4561" FOREIGN KEY ("role_id") REFERENCES "role" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)'),await e.query('INSERT INTO "temporary_user"("id", "is_active", "name", "login", "password", "email", "phone", "role_id") SELECT "id", "is_active", "name", "login", "password", "email", "phone", "role_id" FROM "user"'),await e.query('DROP TABLE "user"'),await e.query('ALTER TABLE "temporary_user" RENAME TO "user"')}async down(e){await e.query('ALTER TABLE "user" RENAME TO "temporary_user"'),await e.query('CREATE TABLE "user" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "is_active" boolean NOT NULL DEFAULT (1), "name" text NOT NULL, "login" text NOT NULL, "password" text NOT NULL, "email" text, "phone" text, "role_id" integer)'),await e.query('INSERT INTO "user"("id", "is_active", "name", "login", "password", "email", "phone", "role_id") SELECT "id", "is_active", "name", "login", "password", "email", "phone", "role_id" FROM "temporary_user"'),await e.query('DROP TABLE "temporary_user"'),await e.query('DROP TABLE "role"'),await e.query('DROP TABLE "user"')}};var I=class{constructor(){this.name="Data1723140820803"}async up(e){await e.query('INSERT INTO "role" (id, name) VALUES (1, "admin")'),await e.query('INSERT INTO "role" (id, name) VALUES (2, "manager")');let o=T("a"),t=T("a");await e.query('INSERT INTO "user" (name, login, password, role_id) VALUES ("\u0410\u0434\u043C\u0438\u043D\u0438\u0441\u0442\u0430\u0442\u043E\u0440", "admin", "'+o+'", 1)'),await e.query('INSERT INTO "user" (name, login, password, role_id, email, phone) VALUES ("\u041C\u0435\u043D\u0435\u0434\u0436\u0435\u0440", "manager", "'+t+'", 2, "email@email.ru", "+79511239342")')}async down(e){await e.query('DELETE FROM "role"'),await e.query('DELETE FROM "user"')}};var Y=new Q.DataSource({name:"cp",type:"sqlite",database:"db/main.sqlite",synchronize:!1,migrations:[b,I],entities:[a,d]});var h=r=>Y.getRepository(r),y={findRoles:async()=>h(d).find({order:{id:"asc"}}),findAll:async()=>h(a).find({order:{id:"desc"},relations:["role"]}),findById:async r=>await h(a).findOne({where:{id:r},relations:["role"]}).catch(t=>console.log("findById",t))??null,findByLoginPassword:async r=>await h(a).findOne({where:r,relations:["role"]}).catch(t=>console.log("findByLoginPassword",t))??null,delete:async r=>{let o=await h(a).delete({id:r}).catch(t=>console.log("delete",t));return!!o?.affected&&o?.affected>0},add:async r=>{let e=h(a);if(await e.findOne({where:{login:r.login}})!==null)return!1;let t={...r,role:await h(d).findOneBy({id:r.role_id})};return t.password=T(r.password),await $(e,t)},update:async(r,e)=>{let o=h(a),t={...e,id:r,role:await h(d).findOneBy({id:e.role_id})};return t.password&&t.password!=="*"?t.password=T(t.password):delete t.password,await K(o,t,"id")}};var Re=g(require("cors")),C=g(require("express")),fe=require("pino");var J=g(require("express"));var m=require("http-status-codes"),W=g(require("jsonwebtoken"));var Z=g(require("dotenv")),c=require("envalid");Z.default.config();var N=(0,c.cleanEnv)(process.env,{NODE_ENV:(0,c.str)({devDefault:(0,c.testOnly)("test"),choices:["development","production","test"]}),HOST:(0,c.host)({devDefault:(0,c.testOnly)("localhost")}),PORT:(0,c.port)({devDefault:(0,c.testOnly)(3e3)}),CORS_ORIGIN:(0,c.str)({devDefault:(0,c.testOnly)("http://localhost:3000")}),SECRET:(0,c.str)({devDefault:(0,c.testOnly)("")})});var A=r=>({id:r.id,is_active:r.is_active,login:r.login,name:r.name,password:"*",role:r.role?.name,role_id:r.role?.id,email:r.email,phone:r.phone}),G=r=>r.map(e=>A(e));var w={findAll:async()=>{try{let r=await y.findAll();return r?new n(G(r),m.StatusCodes.OK):new n(null,m.StatusCodes.NOT_FOUND)}catch(r){let e=`Error finding all users: ${r.message}`;return E.error(e),new n(null,m.StatusCodes.INTERNAL_SERVER_ERROR)}},findById:async r=>{try{let e=await y.findById(r);if(!e)return new n(null,m.StatusCodes.NOT_FOUND);let o=await y.findRoles();return new n({...A(e),config:{roles:o}},m.StatusCodes.OK)}catch(e){let o=`Error finding user with id ${r}: ${e.message}`;return E.error(o),new n(null,m.StatusCodes.INTERNAL_SERVER_ERROR)}},findByLoginPassword:async r=>{try{let e={...r};e.password=T(e.password);let o=await y.findByLoginPassword(e);if(!o)return new n("user not found",m.StatusCodes.NOT_FOUND);let t=A(o),s={user_id:t.id,role:t.role},p=W.default.sign(s,N.SECRET);return new n({token:p,...s},m.StatusCodes.OK)}catch(e){let o=`Error finding user with login ${r.login}: ${e.message}`;return E.error(o),new n("",m.StatusCodes.INTERNAL_SERVER_ERROR)}},delete:async r=>{try{return r===1?new n("you cannot delete the main administrator",m.StatusCodes.BAD_REQUEST):await y.delete(r)?new n("",m.StatusCodes.OK):new n("",m.StatusCodes.NOT_FOUND)}catch(e){let o=`Error deleting user with id ${r}: ${e.message}`;return E.error(o),new n(o,m.StatusCodes.INTERNAL_SERVER_ERROR)}},add:async r=>{try{let e=await y.add(r);return e?new n({id:e?.identifiers[0].id},m.StatusCodes.OK):new n("user with that login exists",m.StatusCodes.CONFLICT)}catch(e){let o=`Error adding user: ${e.message}`;return E.error(o),new n(o,m.StatusCodes.INTERNAL_SERVER_ERROR)}},update:async(r,e)=>{try{let o=await y.update(r,e);return console.log("\u{1F680} ~ update: ~ res:",o),new n(A(o),m.StatusCodes.OK)}catch(o){let t=`Error updating user: ${o.message}`;return E.error(t),new n(t,m.StatusCodes.INTERNAL_SERVER_ERROR)}}};var O=require("zod");var q=require("zod"),x={id:q.z.string().refine(r=>!isNaN(Number(r)),"ID must be a numeric value").transform(Number).refine(r=>r>0,"ID must be a positive number"),idNumber:q.z.number().refine(r=>r>0,"ID must be a positive number")};var X=O.z.object({login:O.z.string(),password:O.z.string()}).required(),Er=O.z.object({token:O.z.string(),user_id:x.id,role:O.z.string()});var ee=(()=>{let r=J.default.Router();return r.post("/",S(X),async(e,o)=>{let t=e.body,s=await w.findByLoginPassword(t);R(s,o)}),r})();var re=g(require("express")),oe=require("http-status-codes");var te=(()=>{let r=re.default.Router();return r.get("/",(e,o)=>{let t=new n("ok",oe.StatusCodes.OK);R(t,o)}),r})();var ie=g(require("express"));var i=require("zod");var qr=i.z.object({id:x.id,is_active:i.z.boolean(),name:i.z.string(),login:i.z.string(),password:i.z.string().optional(),role:i.z.string(),role_id:i.z.number(),email:i.z.string().optional(),phone:i.z.string().optional()}),D=i.z.object({id:x.id}),se=i.z.object({name:i.z.string(),login:i.z.string(),password:i.z.string(),role_id:i.z.number(),email:i.z.string(),phone:i.z.string()}).required({name:!0,login:!0,role_id:!0}),ne=i.z.object({id:x.id,is_active:i.z.boolean(),name:i.z.string(),password:i.z.string().optional(),role_id:i.z.string(),email:i.z.string().optional(),phone:i.z.string().optional()}).required({id:!0,name:!0,role_id:!0});var ae=(()=>{let r=ie.default.Router();return r.get("/me",async(e,o)=>{let t=e.locals?.user,s=await w.findById(t.user_id);R(s,o)}),r.get("/",async(e,o)=>{let t=await w.findAll();R(t,o)}),r.get("/:id",S(D),async(e,o)=>{let t=parseInt(e.params.id,10),s=await w.findById(t);R(s,o)}),r.delete("/:id",S(D),async(e,o)=>{let t=parseInt(e.params.id,10),s=await w.delete(t);R(s,o)}),r.post("/",S(se),async(e,o)=>{let t=e.body,s=await w.add(t);R(s,o)}),r.put("/:id",S(ne),async(e,o)=>{let t=e.body,s=parseInt(e.params.id,10),p=await w.update(s,t);R(p,o)}),r})();var _=require("http-status-codes"),me=g(require("jsonwebtoken"));var Oe=["/auth","/health-check","/","/favicon.ico","/cp/"],xe="/cp",Le=(r,e,o)=>{let{SECRET:t}=N;if(Oe.includes(r.originalUrl)){o();return}if(r.originalUrl.includes(xe)){o();return}let s=r.headers.authorization;if(!s)return e.status(_.StatusCodes.UNAUTHORIZED).send("Access Denied / Unauthorized request");try{if(s=s.split(" ")[1],!s)return e.status(_.StatusCodes.UNAUTHORIZED).send("Unauthorized request");let p=me.default.verify(s,t);if(!p)return e.status(_.StatusCodes.UNAUTHORIZED).send("Unauthorized request");r.locals||(r.locals={}),r.locals.user=p,o()}catch{return e.status(_.StatusCodes.BAD_REQUEST).send("Invalid Token")}},pe=()=>[Le];var ce=require("http-status-codes"),Pe=(r,e)=>{e.sendStatus(ce.StatusCodes.NOT_FOUND)},Ae=(r,e,o,t)=>{o.locals.err=r,t(r)},ue=()=>[Pe,Ae];var de=require("pino-http");var _e=(r,e)=>({error:e.locals.err,responseBody:e.locals.responseBody}),ve=(r,e,o)=>{if(!N.isProduction){let s=e.send;e.send=function(p){return e.locals.responseBody=p,e.send=s,s.call(e,p)}}o()},be=r=>{let e={enabled:!0,customProps:_e,customSuccessMessage:o=>`<- completed ${o.method}`,serializers:{req:o=>({id:o.raw.id,method:o.raw.method,url:o.raw.url,body:o.raw.body,authorization:o.raw.headers.authorization}),res:o=>({statusCode:o.raw.statusCode})},...r};return[ve,(0,de.pinoHttp)(e)]},le=be();var E=(0,fe.pino)({name:"server start"}),f=(0,C.default)();f.set("trust proxy",!0);f.use(C.default.json({limit:"5mb"}));f.use(C.default.urlencoded({extended:!0}));f.use((0,Re.default)({origin:N.CORS_ORIGIN,credentials:!0}));f.use(le);f.use(pe());f.use("/health-check",te);f.use("/auth",ee);f.use("/config",B);f.use("/users",ae);f.use(ue());var ge={getConfig:async()=>{try{let r={roles:{}};return(await y.findRoles()).forEach(o=>{r.roles[o.id]=o.name}),new n(r,M.StatusCodes.OK)}catch(r){let e=`Error get config: ${r.message}`;return E.error(e),new n(e,M.StatusCodes.INTERNAL_SERVER_ERROR)}}};var B=(()=>{let r=ye.default.Router();return r.get("/",async(e,o)=>{let t=await ge.getConfig();R(t,o)}),r})();0&&(module.exports={configRouter});
