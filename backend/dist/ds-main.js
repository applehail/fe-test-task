"use strict";var A=Object.create;var T=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var w=Object.getOwnPropertyNames;var x=Object.getPrototypeOf,I=Object.prototype.hasOwnProperty;var _=(a,e)=>{for(var t in e)T(a,t,{get:e[t],enumerable:!0})},O=(a,e,t,s)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of w(e))!I.call(a,n)&&n!==t&&T(a,n,{get:()=>e[n],enumerable:!(s=u(e,n))||s.enumerable});return a};var f=(a,e,t)=>(t=a!=null?A(x(a)):{},O(e||!a||!a.__esModule?T(t,"default",{value:a,enumerable:!0}):t,a)),R=a=>O(T({},"__esModule",{value:!0}),a),r=(a,e,t,s)=>{for(var n=s>1?void 0:s?u(e,t):e,E=a.length-1,p;E>=0;E--)(p=a[E])&&(n=(s?p(e,t,n):p(n))||n);return s&&n&&T(e,t,n),n};var U={};_(U,{mainSource:()=>b});module.exports=R(U);var c=require("typeorm");var l=require("typeorm");var o=require("typeorm");var i=class{};r([(0,o.Column)("integer",{primary:!0,name:"id",generated:!0})],i.prototype,"id",2),r([(0,o.Column)("boolean",{name:"is_active",default:!0})],i.prototype,"is_active",2),r([(0,o.Column)("text",{name:"name",nullable:!1})],i.prototype,"name",2),r([(0,o.Column)("text",{name:"login",nullable:!1})],i.prototype,"login",2),r([(0,o.Column)("text",{name:"password",nullable:!1})],i.prototype,"password",2),r([(0,o.Column)("text",{name:"email",nullable:!0})],i.prototype,"email",2),r([(0,o.Column)("text",{name:"phone",nullable:!0})],i.prototype,"phone",2),r([(0,o.JoinColumn)({name:"role_id",referencedColumnName:"id"}),(0,o.ManyToOne)(()=>m,e=>e.users)],i.prototype,"role",2),i=r([(0,o.Entity)("user")],i);var m=class{};r([(0,l.Column)("integer",{primary:!0,name:"id"})],m.prototype,"id",2),r([(0,l.Column)("text",{name:"name"})],m.prototype,"name",2),r([(0,l.OneToMany)(()=>i,e=>e.role)],m.prototype,"users",2),m=r([(0,l.Entity)("role")],m);var N=class{constructor(){this.name="Initial1723140820802"}async up(e){await e.query('CREATE TABLE "user" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "is_active" boolean NOT NULL DEFAULT (1), "name" text NOT NULL, "login" text NOT NULL, "password" text NOT NULL, "email" text, "phone" text, "role_id" integer)'),await e.query('CREATE TABLE "role" ("id" integer PRIMARY KEY NOT NULL, "name" text NOT NULL)'),await e.query('CREATE TABLE "temporary_user" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "is_active" boolean NOT NULL DEFAULT (1), "name" text NOT NULL, "login" text NOT NULL, "password" text NOT NULL, "email" text, "phone" text, "role_id" integer, CONSTRAINT "FK_fb2e442d14add3cefbdf33c4561" FOREIGN KEY ("role_id") REFERENCES "role" ("id") ON DELETE NO ACTION ON UPDATE NO ACTION)'),await e.query('INSERT INTO "temporary_user"("id", "is_active", "name", "login", "password", "email", "phone", "role_id") SELECT "id", "is_active", "name", "login", "password", "email", "phone", "role_id" FROM "user"'),await e.query('DROP TABLE "user"'),await e.query('ALTER TABLE "temporary_user" RENAME TO "user"')}async down(e){await e.query('ALTER TABLE "user" RENAME TO "temporary_user"'),await e.query('CREATE TABLE "user" ("id" integer PRIMARY KEY AUTOINCREMENT NOT NULL, "is_active" boolean NOT NULL DEFAULT (1), "name" text NOT NULL, "login" text NOT NULL, "password" text NOT NULL, "email" text, "phone" text, "role_id" integer)'),await e.query('INSERT INTO "user"("id", "is_active", "name", "login", "password", "email", "phone", "role_id") SELECT "id", "is_active", "name", "login", "password", "email", "phone", "role_id" FROM "temporary_user"'),await e.query('DROP TABLE "temporary_user"'),await e.query('DROP TABLE "role"'),await e.query('DROP TABLE "user"')}};var g=f(require("jssha")),L=a=>{let e=new g.default("SHA-256","TEXT",{encoding:"UTF8"});return e.update(a),e.getHash("HEX")};var d=class{constructor(){this.name="Data1723140820803"}async up(e){await e.query('INSERT INTO "role" (id, name) VALUES (1, "admin")'),await e.query('INSERT INTO "role" (id, name) VALUES (2, "manager")');let t=L("a"),s=L("a");await e.query('INSERT INTO "user" (name, login, password, role_id) VALUES ("\u0410\u0434\u043C\u0438\u043D\u0438\u0441\u0442\u0430\u0442\u043E\u0440", "admin", "'+t+'", 1)'),await e.query('INSERT INTO "user" (name, login, password, role_id, email, phone) VALUES ("\u041C\u0435\u043D\u0435\u0434\u0436\u0435\u0440", "manager", "'+s+'", 2, "email@email.ru", "+79511239342")')}async down(e){await e.query('DELETE FROM "role"'),await e.query('DELETE FROM "user"')}};var b=new c.DataSource({name:"cp",type:"sqlite",database:"db/main.sqlite",synchronize:!1,migrations:[N,d],entities:[i,m]});0&&(module.exports={mainSource});
